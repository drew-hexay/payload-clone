"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useCell = void 0;
var react_1 = __importStar(require("react"));
var Grid_1 = require("../Grid");
var Settings_1 = require("../Settings");
var Context = (0, react_1.createContext)(null);
var useCell = function () { return (0, react_1.useContext)(Context); };
exports.useCell = useCell;
var Cell = (0, react_1.forwardRef)(function (props, ref) {
    var children = props.children, cols = props.cols, colsS = props.colsS, colsM = props.colsM, colsL = props.colsL, colsXL = props.colsXL, start = props.start, startS = props.startS, startM = props.startM, startL = props.startL, startXL = props.startXL, _a = props.htmlElement, Tag = _a === void 0 ? 'div' : _a, className = props.className, rest = __rest(props, ["children", "cols", "colsS", "colsM", "colsL", "colsXL", "start", "startS", "startM", "startL", "startXL", "htmlElement", "className"]);
    var colsAvailable = (0, Grid_1.useGrid)().cols;
    var _b = (0, Settings_1.useSettings)(), classPrefix = _b.classPrefix, colSettings = _b.cols;
    var colsToSpan = {
        s: colsS || colsM || colsL || cols || colsXL || colsAvailable.s,
        m: colsM || colsL || cols || colsXL || colsAvailable.m,
        l: colsL || cols || colsXL || colsAvailable.l,
        xl: cols || colsXL || colsAvailable.xl,
    };
    if (colsToSpan.l > colSettings.l)
        colsToSpan.l = colSettings.l;
    if (colsToSpan.m > colSettings.m)
        colsToSpan.m = colSettings.m;
    if (colsToSpan.s > colSettings.s)
        colsToSpan.s = colSettings.s;
    return (react_1.default.createElement(Tag, __assign({ ref: ref, className: [
            className,
            "".concat(classPrefix, "__cell"),
            (start || startXL) && "".concat(classPrefix, "__cell--xl-col-start-").concat(start || startXL),
            startL && "".concat(classPrefix, "__cell--l-col-start-").concat(startL),
            startM && "".concat(classPrefix, "__cell--m-col-start-").concat(startM),
            startS && "".concat(classPrefix, "__cell--s-col-start-").concat(startS),
            "".concat(classPrefix, "__cell--xl-col-end-").concat(cols || colsXL || colsAvailable.xl),
            "".concat(classPrefix, "__cell--l-col-end-").concat(colsToSpan.l),
            "".concat(classPrefix, "__cell--m-col-end-").concat(colsToSpan.m),
            "".concat(classPrefix, "__cell--s-col-end-").concat(colsToSpan.s),
        ].filter(Boolean).join(' ') }, rest),
        react_1.default.createElement(Context.Provider, { value: {
                cols: colsToSpan,
            } }, children)));
});
Cell.displayName = 'Cell';
exports.default = Cell;
//# sourceMappingURL=index.js.map