"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var useSlider_1 = __importDefault(require("../useSlider"));
var DotsNav = function (props) {
    var _a = props.htmlElement, Tag = _a === void 0 ? 'div' : _a, dotClassName = props.dotClassName, activeDotClassName = props.activeDotClassName, _b = props.buttonProps, buttonProps = _b === void 0 ? {} : _b, rest = __rest(props, ["htmlElement", "dotClassName", "activeDotClassName", "buttonProps"]);
    var _c = (0, useSlider_1.default)(), currentSlideIndex = _c.currentSlideIndex, slides = _c.slides, setIsPaused = _c.setIsPaused, pauseOnHover = _c.pauseOnHover, goToSlideIndex = _c.goToSlideIndex, idFromContext = _c.id;
    var dotsArray = Array.from(Array(slides.length || 0).keys());
    return (react_1.default.createElement(Tag, __assign({}, rest, { onMouseEnter: function () {
            if (pauseOnHover)
                setIsPaused(true);
        }, onMouseLeave: function () {
            if (pauseOnHover)
                setIsPaused(false);
        } }), dotsArray.map(function (dot, index) {
        var isActive = currentSlideIndex === index;
        return (react_1.default.createElement("button", __assign({ "aria-label": "Go to previous slide ".concat(index + 1), "aria-controls": "slider-track_".concat(idFromContext), key: index }, buttonProps, { onClick: function (e) {
                goToSlideIndex(index);
                if (typeof (buttonProps === null || buttonProps === void 0 ? void 0 : buttonProps.onClick) === 'function') {
                    buttonProps.onClick(e);
                }
            }, className: [
                isActive && activeDotClassName,
                dotClassName,
                buttonProps.className
            ].filter(Boolean).join(' '), type: "button" })));
    })));
};
exports.default = DotsNav;
//# sourceMappingURL=index.js.map