"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var react_animate_height_1 = __importDefault(require("react-animate-height"));
var useCollapsible_1 = __importDefault(require("../useCollapsible"));
var CollapsibleContent = function (props) {
    var className = props.className, _a = props.htmlElement, Tag = _a === void 0 ? 'div' : _a, children = props.children, rest = __rest(props, ["className", "htmlElement", "children"]);
    var _b = (0, useCollapsible_1.default)(), rootClass = _b.rootClass, transCurve = _b.transCurve, transTime = _b.transTime, isOpen = _b.isOpen, initialHeight = _b.initialHeight, idFromContext = _b.id;
    var baseClass = "".concat(rootClass, "__content");
    var mergedClasses = [
        baseClass,
        isOpen && "".concat(baseClass, "--is-open"),
        className,
    ].filter(Boolean).join(' ');
    return (react_1.default.createElement(Tag
    // NOTE: the 'aria-owns' attribute of the toggler should match this id
    , __assign({ 
        // NOTE: the 'aria-owns' attribute of the toggler should match this id
        id: "collapsible-content_".concat(idFromContext), "aria-labelledby": "collapsible-toggler_".concat(idFromContext), role: "region" }, rest, { className: mergedClasses }),
        react_1.default.createElement(react_animate_height_1.default, { height: isOpen ? 'auto' : initialHeight, easing: transCurve || 'linear', duration: transTime || 0 }, children && children)));
};
exports.default = CollapsibleContent;
//# sourceMappingURL=index.js.map