import { MutableRefObject } from 'react';
import { ISlide } from '../Slide';
import { SliderProviderProps } from '../SliderProvider';
export interface ISliderContext extends Omit<SliderProviderProps, 'children'> {
    slidesToShow: number;
    scrollOffset: number;
    sliderTrackRef: MutableRefObject<HTMLElement | null>;
    currentSlideIndex: number;
    setCurrentSlideIndex?: (index: number) => void;
    scrollRatio: number;
    setScrollRatio: (ratio: number) => void;
    goToNextSlide: () => void;
    goToPrevSlide: () => void;
    goToSlideIndex: (index: number) => void;
    slides: ISlide[];
    dispatchSlide: (slide: ISlide) => void;
    slideWidth?: string;
    isPaused?: boolean;
    setIsPaused: (is: boolean) => void;
    isDragging: boolean;
}
export declare const SliderContext: import("react").Context<ISliderContext>;
export default SliderContext;
