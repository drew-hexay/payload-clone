"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
var useSlider_1 = __importDefault(require("../useSlider"));
var useIntersection_1 = __importDefault(require("./useIntersection"));
var Slide = function (props) {
    var index = props.index, _a = props.htmlElement, htmlElement = _a === void 0 ? 'div' : _a, children = props.children, style = props.style, onClickFromProps = props.onClick, rest = __rest(props, ["index", "htmlElement", "children", "style", "onClick"]);
    var _b = (0, react_1.useState)(), snapStyles = _b[0], setSnapStyles = _b[1];
    var slider = (0, useSlider_1.default)();
    var slideRef = (0, react_1.useRef)(null);
    var dispatchSlide = slider.dispatchSlide, sliderTrackRef = slider.sliderTrackRef, goToSlideIndex = slider.goToSlideIndex, slideWidth = slider.slideWidth, slideOnSelect = slider.slideOnSelect, scrollSnap = slider.scrollSnap, scrollOffset = slider.scrollOffset, slides = slider.slides;
    var prevIntersection = (0, react_1.useRef)();
    var isIntersecting = (0, useIntersection_1.default)(slideRef, {
        root: sliderTrackRef,
        rootMargin: scrollOffset ? "0px -".concat(scrollOffset, "px 0px -").concat(scrollOffset, "px") : '-1px',
    }).isIntersecting;
    (0, react_1.useEffect)(function () {
        var intersectionChange = prevIntersection.current !== isIntersecting;
        if (intersectionChange) {
            dispatchSlide({
                index: index,
                ref: slideRef,
                isIntersecting: isIntersecting,
            });
            prevIntersection.current = isIntersecting;
        }
    }, [
        dispatchSlide,
        isIntersecting,
        index,
    ]);
    // here
    (0, react_1.useEffect)(function () {
        if (scrollSnap) {
            setSnapStyles({
                scrollSnapStop: 'always',
                scrollSnapAlign: 'start',
            });
        }
        else {
            setSnapStyles(undefined);
        }
    }, [scrollSnap]);
    var handleClick = (0, react_1.useCallback)(function (e) {
        if (slideOnSelect) {
            goToSlideIndex(index);
        }
        if (typeof onClickFromProps === 'function') {
            onClickFromProps(e);
        }
    }, [
        slideOnSelect,
        index,
        goToSlideIndex,
        onClickFromProps
    ]);
    var Tag = htmlElement;
    return (react_1.default.createElement(Tag, __assign({}, __assign(__assign({ ref: slideRef, onClick: handleClick, role: "group", 'aria-roledescription': "slide", 'aria-label': "".concat(index + 1, " of ").concat((slides === null || slides === void 0 ? void 0 : slides.length) || 0) }, rest), { style: __assign(__assign({ flexShrink: 0, width: slideWidth }, style || {}), snapStyles || {}) })), children && children));
};
exports.default = Slide;
//# sourceMappingURL=index.js.map